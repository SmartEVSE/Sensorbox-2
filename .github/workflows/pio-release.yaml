on:
  push:
    tags:
      - 'v*'

name: Create Release
jobs:
  version: 
    runs-on: ubuntu-latest
    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
    outputs:
      major: ${{ steps.get_version.outputs.major }}
      minor: ${{ steps.get_version.outputs.minor }}
      patch: ${{ steps.get_version.outputs.patch }}
      prerelease: ${{ steps.get_version.outputs.prerelease }}
  build:
    needs: version
    uses: ./.github/workflows/pio-build.yaml
    with:
      major: ${{ needs.version.outputs.major }}
      minor: ${{ needs.version.outputs.minor }}
      patch: ${{ needs.version.outputs.patch }}
      prerelease: ${{ needs.version.outputs.prerelease }}
    secrets: inherit
  release:
    permissions: write-all
    needs: build
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Get current tag
        id: tag
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        id: download
        with:
          path: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Zip
        run: zip -j ${{ steps.tag.outputs.tag }}-dist.zip ./dist/${{ needs.build.outputs.artifact }}/*
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.tag.outputs.tag }}-dist.zip
          asset_name: ${{ steps.tag.outputs.tag }}-dist.zip
          asset_content_type: application/zip

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region eu-west-2

      - name: Upload file to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ./dist/${{ needs.build.outputs.artifact }}/firmware.debug.signed.bin s3://smartevse-3/${{ github.repository_owner }}_sensorboxv2_firmware.debug.signed.bin
          aws s3 cp ./dist/${{ needs.build.outputs.artifact }}/firmware.signed.bin s3://smartevse-3/${{ github.repository_owner }}_sensorboxv2_firmware.signed.bin

